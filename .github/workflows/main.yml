name: Build and upload artifact

on: 
  push: 
    branches: [build]
  pull_request:
    branches: [build]
    
jobs:
  build:
    name: Build windows artifact
    runs-on: self-hosted
    steps:
      # change working directory owner before clean
      - name: Set owner of working dir recurively (Linux)
        run: sudo chown -R $(whoami) .
        
      # Clean
      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0
        
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      
      # Get build version
      - name: Check for duplicate artifact
        run: |
          cd $GITHUB_WORKSPACE
          (echo -n "buildVersion=" ; grep -m 1 "bundleVersion: " ProjectSettings/ProjectSettings.asset | cut -c 18- ) >> $GITHUB_ENV

      # Check for duplicate version
      - name: Check artifact exists
        uses: xSAVIKx/artifact-exists-action@v0
        id: "artifact-exists"
        with:
          name: "Build-${{ env.buildVersion }}"
      # Fail if artifact exists
      - name: Fail if Build-${{ env.buildVersion }} already exists
        run: exit 1
        if: "${{ steps.check_workflow_exists.outputs.exists == 'true' }}"
        
      # Cache
#      - uses: actions/cache@v3
#        with:
#          path: Library
#          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
#          restore-keys: |
#            Library-

      # Test
#      - name: Run tests
#        uses: game-ci/unity-test-runner@v4
#        env:
#          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#        with:
#          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build windows
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ env.buildVersion }}
          path: build
          compression-level: 9 # maximum compression
          retention-days: 7 # delete after 7 days
            
#      # Clean up
#      - name: Clean Up after failed build # if we don't do this, the next build will fail
#        if: always()
#        uses: AutoModality/action-clean@v1.1.0